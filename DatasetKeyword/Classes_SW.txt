{'sw activity process':['specification','design_and_implementation','validation','evaluation','implementation','verification'],'software process model':['plan_driven','waterfall','incremental_development','reuse_oriented','agile','incremental delivery'],'requirements engineering process':['feasibility study','requirements_elicitation_and_analysis','requirements_specification','requirements_validation','requirements_reviews','requirements_elicitation_and_analysis'],'design activities':['architectural_design','interface_design','component_design','database design','architectural_design','system_design'],'stages of testing':['component_testing','system_testing','acceptance_testing','interface_design','component_design','database design'],'non functional requirements main classes':['product_requirements','organizational_requirements','external_requirements','functional_requirements','non_functional_requirements','domain_requirements'],'requirements types':['functional_requirements','non_functional_requirements','domain_requirements','product_requirements','organizational_requirements','external_requirements'],'non function requirements matrix':['speed','size','ease_of_use','reliability','robustness','portability'],'ways of getting requirements':['natural_language','structured natural language','design description languages','graphical notations','mathematical specifications','natural language'],'requirements engineering process activities':['requirements_elicitation_and_analysis','requirements_validation','requirements_management','requirements_specification','requirements_reviews','requirements_specification'],'requirements elicitation':['requirements_gathering_and_discovery','requirements_classification_and_organization','requirements_prioritization_and_negotiation','requirements_specification','requirements_validation','requirements_management'],'requirements validation techniques':['requirements_reviews','test_case_generation','prototyping','evaluation','consistency','verification'],'checking on requirements':['validity','consistency','completeness','verifiability','validation','evaluation'],'diagrams types':['functional_diagram','static_diagram','dynamic_diagrams','state_diagrams','object_diagram','package_diagram'],'dynamic diagrams':['interaction_diagram','state_diagrams','activity_diagrams','class_diagram','object_diagram','static_diagrams'],'static diagrams':['class_diagram','object_diagram','package_diagram','static_diagram','dynamic_diagrams'],'class diagram component':['class','objects','relationships','attributes','operations','message'],'relationship types':['association','aggregation','composition','inheritance','generalization','specialization'],'programming approaches':['structured_programming','object_oriented_programming','dynamic programming','static programming','reverse programming','linear programming'],'creational pattern':['singleton_pattern','builder_pattern','factory_pattern','abstract_factory_pattern','prototype_pattern','strategy_pattern'],'structural pattern':['adapter_pattern','facade_pattern','bridge_pattern','composite_pattern','decorator_pattern','flyweight_pattern','proxy_pattern'],'behavioral pattern':['chain_of_responsibility_pattern','command_pattern','iterator_pattern','mediator_pattern','memento_pattern','observer_pattern','state_pattern','strategy_pattern','template_method_pattern','visitor_pattern'],'design pattern':['creational_pattern','structural_pattern','behavioral_pattern','state_pattern','bridge_pattern','visitor_pattern'],'inheritance characteristics':['generalization','specialization','composition','aggregation','association','construction'],'interaction diagrams':['sequence_diagram','communication_diagram','collaboration_diagram','static_diagram','dynamic_diagrams','activity_diagrams','interaction_diagram'],'sequence diagram components':['object_lifeline','message','activation_box','actors','methods','objects','relationships'],'incremental delivery process':['requirement_analysis','design_system','analysis_and_design','feasibility study','implementation','evaluation'],'rup phases':['inception','elaboration','construction','transition','testing','implementation'],'rup prespectives':['dynamic perspective','static_perspective','practice perspective','critical perspective','support perspective','opposite perspective'],'rup workflow':['business_modeling','requirements','analysis_and_design','implementation','testing','deployment','verification_and_validation']}