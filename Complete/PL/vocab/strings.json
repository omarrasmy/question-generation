[
  "\"\"",
  "#",
  "$",
  "''",
  ",",
  "-LRB-",
  "-RRB-",
  ".",
  ":",
  "ADD",
  "AFX",
  "BES",
  "CC",
  "CD",
  "DT",
  "EX",
  "FW",
  "GW",
  "HVS",
  "HYPH",
  "IN",
  "JJ",
  "JJR",
  "JJS",
  "LS",
  "MD",
  "NFP",
  "NIL",
  "NN",
  "NNP",
  "NNPS",
  "NNS",
  "PDT",
  "PRP",
  "PRP$",
  "RB",
  "RBR",
  "RBS",
  "RP",
  "SP",
  "TO",
  "UH",
  "VB",
  "VBD",
  "VBG",
  "VBN",
  "VBP",
  "VBZ",
  "WDT",
  "WP",
  "WP$",
  "WRB",
  "XX",
  "_SP",
  "``",
  "that",
  "if",
  "as",
  "because",
  "while",
  "since",
  "like",
  "so",
  "than",
  "whether",
  "although",
  "though",
  "unless",
  "once",
  "cause",
  "upon",
  "till",
  "whereas",
  "whilst",
  "except",
  "despite",
  "wether",
  "but",
  "becuse",
  "whie",
  "it",
  "w/out",
  "albeit",
  "save",
  "besides",
  "becouse",
  "coz",
  "til",
  "ask",
  "i'd",
  "out",
  "near",
  "seince",
  "tho",
  "sice",
  "will",
  "That",
  "If",
  "As",
  "Because",
  "While",
  "Since",
  "Like",
  "So",
  "Than",
  "Whether",
  "Although",
  "Though",
  "Unless",
  "Once",
  "Cause",
  "Upon",
  "Till",
  "Whereas",
  "Whilst",
  "Except",
  "Despite",
  "Wether",
  "But",
  "Becuse",
  "Whie",
  "It",
  "W/Out",
  "Albeit",
  "Save",
  "Besides",
  "Becouse",
  "Coz",
  "Til",
  "Ask",
  "I'D",
  "Out",
  "Near",
  "Seince",
  "Tho",
  "Sice",
  "Will",
  "something",
  "anyone",
  "anything",
  "nothing",
  "someone",
  "everything",
  "everyone",
  "everybody",
  "nobody",
  "somebody",
  "anybody",
  "any1",
  "Something",
  "Anyone",
  "Anything",
  "Nothing",
  "Someone",
  "Everything",
  "Everyone",
  "Everybody",
  "Nobody",
  "Somebody",
  "Anybody",
  "Any1",
  "-PRON-",
  "I",
  "me",
  "you",
  "he",
  "him",
  "she",
  "her",
  "we",
  "us",
  "they",
  "them",
  "mine",
  "his",
  "hers",
  "its",
  "ours",
  "yours",
  "theirs",
  "myself",
  "yourself",
  "himself",
  "herself",
  "itself",
  "themself",
  "ourselves",
  "yourselves",
  "themselves",
  "Me",
  "You",
  "He",
  "Him",
  "She",
  "Her",
  "We",
  "Us",
  "They",
  "Them",
  "Mine",
  "His",
  "Hers",
  "Its",
  "Ours",
  "Yours",
  "Theirs",
  "Myself",
  "Yourself",
  "Himself",
  "Herself",
  "Itself",
  "Themself",
  "Ourselves",
  "Yourselves",
  "Themselves",
  "my",
  "your",
  "our",
  "their",
  "My",
  "Your",
  "Our",
  "Their",
  "not",
  "n't",
  "nt",
  "n\u2019t",
  "Not",
  "N'T",
  "Nt",
  "N\u2019T",
  "be",
  "have",
  "do",
  "get",
  "of",
  "am",
  "are",
  "'ve",
  "Be",
  "Have",
  "Do",
  "Get",
  "Of",
  "Am",
  "Are",
  "'Ve",
  "been",
  "Been",
  "being",
  "Being",
  "is",
  "'re",
  "'s",
  "has",
  "does",
  "Is",
  "'Re",
  "'S",
  "Has",
  "Does",
  "'m",
  "'d",
  "'M",
  "'D",
  "was",
  "were",
  "did",
  "had",
  "Was",
  "Were",
  "Did",
  "Had",
  "\t",
  "en",
  "\n",
  " ",
  "\")",
  "\"",
  "'",
  "'Cause",
  "'cause",
  "use",
  "'Xxxxx",
  "'Cos",
  "'cos",
  "Cos",
  "'Xxx",
  "'Coz",
  "'coz",
  "'Cuz",
  "'cuz",
  "Cuz",
  "'X",
  "'bout",
  "about",
  "'xxxx",
  "cos",
  "'xxx",
  "cuz",
  "'x",
  "'em",
  "'xx",
  "'ll",
  "'nuff",
  "enough",
  "uff",
  "(*_*)",
  "(",
  "_*)",
  "(-8",
  "(-d",
  "(-:",
  "(-;",
  "(-_-)",
  "_-)",
  "(._.)",
  "_.)",
  "(:",
  "(;",
  "(=",
  "(>_<)",
  "_<)",
  "(^_^)",
  "_^)",
  "(o:",
  "(x:",
  "(\u00ac_\u00ac)",
  "_\u00ac)",
  "(\u0ca0_\u0ca0)",
  "_\u0ca0)",
  "(x_x)",
  "(\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35\u253b\u2501\u253b",
  "\u253b\u2501\u253b",
  ")-:",
  ")",
  "):",
  "-_-",
  "-",
  "-__-",
  "__-",
  "._.",
  "0.0",
  "0",
  "d.d",
  "0.o",
  "d.x",
  "0_0",
  "d_d",
  "0_o",
  "d_x",
  "10",
  "1",
  "dd",
  "a.m.",
  "a",
  ".m.",
  "x.x.",
  "xx",
  "p.m.",
  "p",
  "pm",
  "11",
  "12",
  "d",
  "2",
  "3",
  "4",
  "5",
  "6",
  "7",
  "8)",
  "8",
  "d)",
  "8-)",
  "d-)",
  "8-D",
  "8-d",
  "d-X",
  "8D",
  "8d",
  "dX",
  "9",
  ":'(",
  ":')",
  ":'-(",
  "'-(",
  ":'-)",
  "'-)",
  ":(",
  ":((",
  ":(((",
  "(((",
  ":()",
  ":)",
  ":))",
  ":)))",
  ")))",
  ":*",
  ":-(",
  ":-((",
  "-((",
  ":-(((",
  ":-)",
  ":-))",
  "-))",
  ":-)))",
  ":-*",
  ":-/",
  ":-0",
  ":-d",
  ":-3",
  ":->",
  ":-D",
  ":-X",
  ":-O",
  ":-o",
  ":-P",
  ":-p",
  ":-x",
  ":-]",
  ":-|",
  ":-}",
  ":/",
  ":0",
  ":d",
  ":1",
  ":3",
  ":>",
  ":D",
  ":X",
  ":O",
  ":o",
  ":P",
  ":p",
  ":x",
  ":]",
  ":o)",
  ":x)",
  ":|",
  ":}",
  ":\u2019(",
  ":\u2019)",
  ":\u2019-(",
  "\u2019-(",
  ":\u2019-)",
  "\u2019-)",
  ";)",
  ";",
  ";-)",
  ";-D",
  ";-d",
  ";-X",
  ";D",
  ";d",
  ";X",
  ";_;",
  "<.<",
  "<",
  "</3",
  "</d",
  "<3",
  "<d",
  "<33",
  "<dd",
  "<333",
  "333",
  "<ddd",
  "<space>",
  "ce>",
  "<xxxx>",
  "=(",
  "=",
  "=)",
  "=/",
  "=3",
  "=d",
  "=D",
  "=X",
  "=|",
  ">.<",
  ">",
  ">.>",
  ">:(",
  ">:o",
  ">:x",
  "><(((*>",
  "(*>",
  "@_@",
  "@",
  "Adm.",
  "adm.",
  "A",
  "dm.",
  "Xxx.",
  "Ai",
  "ai",
  "Xx",
  "n",
  "x'x",
  "x\u2019x",
  "Ak.",
  "Alaska",
  "ak.",
  "Xx.",
  "Ala.",
  "Alabama",
  "ala.",
  "la.",
  "Apr.",
  "April",
  "apr.",
  "pr.",
  "Xxx",
  "Ariz.",
  "Arizona",
  "ariz.",
  "iz.",
  "Xxxx.",
  "Ark.",
  "Arkansas",
  "ark.",
  "rk.",
  "Aug.",
  "August",
  "aug.",
  "ug.",
  "Bros.",
  "bros.",
  "B",
  "os.",
  "C++",
  "c++",
  "C",
  "X++",
  "Calif.",
  "California",
  "calif.",
  "if.",
  "Xxxxx.",
  "Ca",
  "can",
  "ca",
  "Can",
  "xxx",
  "ve",
  "v",
  "\u2019ve",
  "\u2019",
  "\u2019xx",
  "Co.",
  "co.",
  "Colo.",
  "Colorado",
  "colo.",
  "lo.",
  "Conn.",
  "Connecticut",
  "conn.",
  "nn.",
  "Corp.",
  "corp.",
  "rp.",
  "Could",
  "could",
  "uld",
  "Xxxxx",
  "D.C.",
  "d.c.",
  "D",
  ".C.",
  "X.X.",
  "Dare",
  "dare",
  "Xxxx",
  "Dec.",
  "December",
  "dec.",
  "ec.",
  "Del.",
  "Delaware",
  "del.",
  "el.",
  "oes",
  "Doin",
  "doing",
  "doin",
  "oin",
  "Doin'",
  "doin'",
  "in'",
  "Xxxx'",
  "Doin\u2019",
  "doin\u2019",
  "in\u2019",
  "Xxxx\u2019",
  "Dr.",
  "dr.",
  "E.G.",
  "e.g.",
  "E",
  ".G.",
  "E.g.",
  ".g.",
  "X.x.",
  "Feb.",
  "February",
  "feb.",
  "F",
  "eb.",
  "Fla.",
  "Florida",
  "fla.",
  "Ga.",
  "Georgia",
  "ga.",
  "G",
  "Gen.",
  "gen.",
  "en.",
  "Goin",
  "go",
  "going",
  "goin",
  "Goin'",
  "goin'",
  "Goin\u2019",
  "goin\u2019",
  "Gon",
  "gon",
  "na",
  "to",
  "Got",
  "got",
  "ta",
  "t",
  "Gov.",
  "gov.",
  "ov.",
  "H",
  "ave",
  "Havin",
  "having",
  "havin",
  "vin",
  "Havin'",
  "havin'",
  "Xxxxx'",
  "Havin\u2019",
  "havin\u2019",
  "Xxxxx\u2019",
  "would",
  "x",
  "ll",
  "l",
  "s",
  "\u2019d",
  "\u2019x",
  "\u2019ll",
  "\u2019s",
  "How",
  "how",
  "'y",
  "re",
  "r",
  "\u2019y",
  "\u2019re",
  "i",
  "going to",
  "gonna",
  "I.E.",
  "i.e.",
  ".E.",
  "I.e.",
  ".e.",
  "Ia.",
  "Iowa",
  "ia.",
  "Id.",
  "Idaho",
  "id.",
  "Ill.",
  "Illinois",
  "ill.",
  "ll.",
  "m",
  "Inc.",
  "inc.",
  "nc.",
  "Ind.",
  "Indiana",
  "ind.",
  "nd.",
  "\u2019m",
  "Jan.",
  "January",
  "jan.",
  "J",
  "an.",
  "Jr.",
  "jr.",
  "Jul.",
  "July",
  "jul.",
  "ul.",
  "Jun.",
  "June",
  "jun.",
  "un.",
  "Kan.",
  "Kansas",
  "kan.",
  "K",
  "Kans.",
  "kans.",
  "ns.",
  "Ky.",
  "Kentucky",
  "ky.",
  "La.",
  "Louisiana",
  "L",
  "Let",
  "let",
  "Lovin",
  "love",
  "loving",
  "lovin",
  "Lovin'",
  "lovin'",
  "Lovin\u2019",
  "lovin\u2019",
  "Ltd.",
  "ltd.",
  "td.",
  "Ma'am",
  "madam",
  "ma'am",
  "M",
  "'am",
  "Xx'xx",
  "Mar.",
  "March",
  "mar.",
  "ar.",
  "Mass.",
  "Massachusetts",
  "mass.",
  "ss.",
  "May.",
  "May",
  "may.",
  "ay.",
  "may",
  "Ma\u2019am",
  "ma\u2019am",
  "\u2019am",
  "Xx\u2019xx",
  "Md.",
  "md.",
  "Messrs.",
  "messrs.",
  "rs.",
  "Mich.",
  "Michigan",
  "mich.",
  "ch.",
  "Might",
  "might",
  "ght",
  "Minn.",
  "Minnesota",
  "minn.",
  "Miss.",
  "Mississippi",
  "miss.",
  "Mo.",
  "mo.",
  "Mont.",
  "mont.",
  "nt.",
  "Mr.",
  "mr.",
  "Mrs.",
  "mrs.",
  "Ms.",
  "ms.",
  "Mt.",
  "Mount",
  "mt.",
  "Must",
  "must",
  "ust",
  "N.C.",
  "North Carolina",
  "n.c.",
  "N",
  "N.D.",
  "North Dakota",
  "n.d.",
  ".D.",
  "N.H.",
  "New Hampshire",
  "n.h.",
  ".H.",
  "N.J.",
  "New Jersey",
  "n.j.",
  ".J.",
  "N.M.",
  "New Mexico",
  "n.m.",
  ".M.",
  "N.Y.",
  "New York",
  "n.y.",
  ".Y.",
  "Neb.",
  "Nebraska",
  "neb.",
  "Nebr.",
  "nebr.",
  "br.",
  "Need",
  "need",
  "eed",
  "Nev.",
  "Nevada",
  "nev.",
  "ev.",
  "Nothin",
  "nothin",
  "hin",
  "Nothin'",
  "nothin'",
  "Nothin\u2019",
  "nothin\u2019",
  "Nov.",
  "November",
  "nov.",
  "Nuthin",
  "nuthin",
  "Nuthin'",
  "nuthin'",
  "Nuthin\u2019",
  "nuthin\u2019",
  "O'clock",
  "o'clock",
  "O",
  "ock",
  "X'xxxx",
  "O.O",
  "o.o",
  "X.X",
  "O.o",
  "X.x",
  "O_O",
  "o_o",
  "X_X",
  "O_o",
  "X_x",
  "Oct.",
  "October",
  "oct.",
  "ct.",
  "Okla.",
  "Oklahoma",
  "okla.",
  "Ol",
  "old",
  "ol",
  "Ol'",
  "ol'",
  "Xx'",
  "Ol\u2019",
  "ol\u2019",
  "Xx\u2019",
  "Ore.",
  "Oregon",
  "ore.",
  "re.",
  "Ought",
  "ought",
  "O\u2019clock",
  "o\u2019clock",
  "X\u2019xxxx",
  "Pa.",
  "Pennsylvania",
  "pa.",
  "P",
  "Ph.D.",
  "ph.d.",
  "Xx.X.",
  "Prof.",
  "prof.",
  "of.",
  "Rep.",
  "rep.",
  "R",
  "ep.",
  "Rev.",
  "rev.",
  "S.C.",
  "South Carolina",
  "s.c.",
  "S",
  "Sen.",
  "sen.",
  "Sep.",
  "September",
  "sep.",
  "Sept.",
  "sept.",
  "pt.",
  "Sha",
  "shall",
  "sha",
  "Should",
  "should",
  "Somethin",
  "somethin",
  "Somethin'",
  "somethin'",
  "Somethin\u2019",
  "somethin\u2019",
  "St.",
  "st.",
  "Tenn.",
  "Tennessee",
  "tenn.",
  "T",
  "hat",
  "There",
  "there",
  "ere",
  "hey",
  "V.V",
  "v.v",
  "V",
  "V_V",
  "v_v",
  "Va.",
  "Virginia",
  "va.",
  "Wash.",
  "Washington",
  "wash.",
  "W",
  "sh.",
  "What",
  "what",
  "When",
  "when",
  "hen",
  "Where",
  "where",
  "Who",
  "who",
  "Why",
  "why",
  "Wis.",
  "Wisconsin",
  "wis.",
  "is.",
  "Wo",
  "wo",
  "Would",
  "XD",
  "xd",
  "XDD",
  "xdd",
  "XXX",
  "Y",
  "[-:",
  "[",
  "[:",
  "\\\")",
  "\\",
  "\\n",
  "\\x",
  "\\t",
  "^_^",
  "^",
  "^__^",
  "__^",
  "^___^",
  "a.",
  "x.",
  "and/or",
  "/or",
  "xxx/xx",
  "b.",
  "b",
  "c.",
  "c",
  "xxxx",
  "xx.",
  "d.",
  "xxxx'",
  "xxxx\u2019",
  "e.",
  "e",
  "em",
  "f.",
  "f",
  "g.",
  "g",
  "h.",
  "h",
  "i.",
  "j.",
  "j",
  "k.",
  "k",
  "l.",
  "m.",
  "xx'xx",
  "xx\u2019xx",
  "n.",
  "nuff",
  "o",
  "x'xxxx",
  "o.",
  "o.0",
  "x.d",
  "o.O",
  "x.X",
  "x.x",
  "o_0",
  "x_d",
  "o_O",
  "x_X",
  "x_x",
  "xx'",
  "xx\u2019",
  "x\u2019xxxx",
  "p.",
  "q.",
  "q",
  "r.",
  "s.",
  "t.",
  "u.",
  "u",
  "v.",
  "v.s.",
  ".s.",
  "vs.",
  "w.",
  "w",
  "w/o",
  "without",
  "x/x",
  "xD",
  "xX",
  "xDD",
  "xXX",
  "y'",
  "y",
  "x'",
  "all",
  "y.",
  "y\u2019",
  "x\u2019",
  "z.",
  "z",
  "\u00a0",
  "  ",
  "\u00af\\(\u30c4)/\u00af",
  "\u00af",
  ")/\u00af",
  "\u00af\\(x)/\u00af",
  "\u00e4.",
  "\u00e4",
  "\u00f6.",
  "\u00f6",
  "\u00fc.",
  "\u00fc",
  "\u0ca0_\u0ca0",
  "\u0ca0",
  "\u0ca0\ufe35\u0ca0",
  "x\ufe35x",
  "\u2014",
  "\u2018S",
  "\u2018s",
  "\u2018",
  "\u2018X",
  "\u2018x",
  "\u2019Cause",
  "\u2019cause",
  "\u2019Xxxxx",
  "\u2019Cos",
  "\u2019cos",
  "\u2019Xxx",
  "\u2019Coz",
  "\u2019coz",
  "\u2019Cuz",
  "\u2019cuz",
  "\u2019S",
  "\u2019X",
  "\u2019bout",
  "\u2019xxxx",
  "\u2019xxx",
  "\u2019em",
  "\u2019nuff",
  "\u2019\u2019",
  "ROOT",
  "compound",
  "nummod",
  "predet",
  "pobj||prep",
  "advmod||conj",
  "dobj||xcomp",
  "nsubj||ccomp",
  "dative",
  "advmod||xcomp",
  "dobj||ccomp",
  "dobj||conj",
  "prep||conj",
  "prep||nsubj",
  "prep||dobj",
  "advmod||ccomp",
  "case",
  "acl||dobj",
  "acl||nsubj",
  "appos||nsubj",
  "relcl||dobj",
  "relcl||nsubj",
  "appos||dobj",
  "prep||nsubjpass",
  "prep||advmod",
  "prep||acomp",
  "relcl||pobj",
  "acl||nsubjpass",
  "prep||pobj",
  "relcl||nsubjpass",
  "appos||nsubjpass",
  "advcl||nsubj",
  "FAC",
  "PL1",
  "pointer",
  "ter",
  "arithmetic",
  "tic",
  "automatically",
  "lly",
  "scaled",
  "led",
  "by",
  "the",
  "size",
  "ize",
  "pointed",
  "ted",
  "data",
  "ata",
  "type",
  "ype",
  "unification",
  "ion",
  "arrays",
  "ays",
  "and",
  "pointers",
  "ers",
  "means",
  "ans",
  "declared",
  "red",
  "these",
  "ese",
  "dynamically",
  "allocated",
  "simulated",
  "virtually",
  "interchangeable.since",
  "nce",
  "xxxx.xxxx",
  "always",
  "accessed",
  "sed",
  "in",
  "effect",
  "ect",
  "via",
  "array",
  "ray",
  "accesses",
  "ses",
  "typically",
  "checked",
  "ked",
  "against",
  "nst",
  "underlying",
  "ing",
  "ugh",
  "some",
  "ome",
  "compilers",
  "provide",
  "ide",
  "bounds",
  "nds",
  "checking",
  "an",
  "]",
  "option.[31][32",
  "[32",
  "xxxx.[dd][dd",
  "violations",
  "ons",
  "therefore",
  "ore",
  "possible",
  "ble",
  "rather",
  "common",
  "mon",
  "carelessly",
  "sly",
  "written",
  "ten",
  "code",
  "ode",
  "lead",
  "ead",
  "various",
  "ous",
  "repercussions",
  "including",
  "illegal",
  "gal",
  "memory",
  "ory",
  "corruption",
  "buffer",
  "fer",
  "overruns",
  "uns",
  "run",
  "time",
  "ime",
  "exceptions",
  "accessible",
  "from",
  "rom",
  "any",
  "function",
  "inside",
  "program.example",
  "ple",
  "general",
  "ral",
  "permissive",
  "ive",
  "allowing",
  "manipulation",
  "conversion",
  "between",
  "een",
  "types",
  "pes",
  "options",
  "for",
  "levels",
  "els",
  "this",
  "ill",
  "end",
  "loop",
  "oop",
  "sum",
  "displayed.in",
  ".in",
  "xxxx.xx",
  "break",
  "eak",
  "also",
  "lso",
  "used",
  "with",
  "ith",
  "switch",
  "tch",
  "statement",
  "ent",
  "angle",
  "gle",
  "brackets",
  "ets",
  "surrounding",
  "stdio.h",
  "o.h",
  "xxxx.x",
  "indicate",
  "ate",
  "located",
  "using",
  "search",
  "rch",
  "strategy",
  "egy",
  "prefers",
  "headers",
  "provided",
  "ded",
  "compiler",
  "ler",
  "other",
  "same",
  "ame",
  "name",
  "opposed",
  "double",
  "quotes",
  "tes",
  "which",
  "ich",
  "include",
  "ude",
  "local",
  "cal",
  "or",
  "project",
  "specific",
  "fic",
  "header",
  "der",
  "ritchie",
  "hie",
  "idea",
  "dea",
  "declare",
  "identifiers",
  "contexts",
  "xts",
  "resembling",
  "eir",
  "declaration",
  "reflects",
  "cts",
  ".)[30]c",
  "0]c",
  ".)[dd]x",
  "usual",
  "ual",
  "conversions",
  "allow",
  "low",
  "efficient",
  "generated",
  "sometimes",
  "mes",
  "produce",
  "uce",
  "unexpected",
  "results",
  "lts",
  "programming",
  "languages",
  "ges",
  "address",
  "ess",
  "problems",
  "ems",
  "more",
  "restrictive",
  "reference",
  "types.arrayssee",
  "see",
  "stringarray",
  "traditionally",
  "fixed",
  "xed",
  "static",
  "specified",
  "ied",
  "at",
  "compile",
  "ile",
  "union).c",
  ").c",
  "xxxx).x",
  "often",
  "level",
  "vel",
  "systems",
  "escapes",
  "system",
  "tem",
  "necessary",
  "ary",
  "even",
  "ven",
  "most",
  "ost",
  "expression",
  "converted",
  "into",
  "nto",
  "first",
  "rst",
  "element",
  "elf",
  "occupy",
  "upy",
  "storage",
  "age",
  "value",
  "lue",
  "constant",
  "ant",
  "unlike",
  "ike",
  "variable",
  "learn",
  "arn",
  "initialize",
  "access",
  "elements",
  "nts",
  "help",
  "elp",
  "examples.c",
  "s.c",
  "arraysan",
  "san",
  "store",
  "multiple",
  "values",
  "ues",
  "conditional",
  "nal",
  "null",
  "ull",
  "evaluate",
  "false",
  "lse",
  "true.void",
  "oid",
  "void",
  "*",
  "point",
  "int",
  "objects",
  "unspecified",
  "generic",
  "ric",
  "largest",
  "est",
  "open",
  "pen",
  "source",
  "rce",
  "projects",
  "such",
  "uch",
  "linux",
  "nux",
  "kernel",
  "nel",
  "python",
  "hon",
  "interpreter",
  "sqlite",
  "ite",
  "database",
  "ase",
  "etc",
  "programming.how",
  "xxxx.xxx",
  "handlers.[28]a",
  "8]a",
  "xxxx.[dd]x",
  "explicitly",
  "tly",
  "points",
  "no",
  "valid",
  "lid",
  "location",
  "main",
  "ain",
  "assigned",
  "ned",
  "value.return",
  "urn",
  "functionsyntax",
  "tax",
  "return",
  "statementreturn",
  "keyword",
  "ord",
  "parameter",
  "list",
  "ist",
  "find",
  "ind",
  "programs",
  "ams",
  "sharpen",
  "knowledge",
  "dge",
  "functions",
  "recursion.a",
  "n.a",
  "block",
  "performs",
  "rms",
  "task.you",
  "examples",
  "les",
  "related",
  "article",
  "cle",
  "above",
  "ove",
  "example",
  "two",
  "variables",
  "n1",
  "n2",
  "passed",
  "during",
  "call.the",
  "parameters",
  "accepts",
  "pts",
  "arguments",
  "definition",
  "now",
  "printed",
  "on",
  "screen.during",
  "second",
  "ond",
  "call",
  "initialized",
  "zed",
  "again",
  "consequently",
  "changed",
  "ged",
  "impossible",
  "assign",
  "ign",
  "new",
  "starts",
  "rts",
  "executing",
  "codes",
  "des",
  "body",
  "ody",
  "function.passing",
  "functionin",
  "nin",
  "frequently",
  "structure",
  "ure",
  "algorithms",
  "hms",
  "manipulated",
  "assignment",
  "user",
  "ser",
  "enters",
  "positive",
  "ber",
  "calculated",
  "+",
  "statement.when",
  "negative",
  "continue",
  "nue",
  "executed",
  "skips",
  "ips",
  "calculation",
  "dynamic",
  "mic",
  "allocation",
  "performed",
  "med",
  "sizeof",
  "eof",
  "x[0",
  "x[d",
  "determined",
  "/",
  "a[0",
  "default://",
  "://",
  "xxxx://",
  "default",
  "ult",
  "statements}how",
  "xxxx}xxx",
  "x+i).[33",
  "[33",
  "x+x).[dd",
  "taking",
  "advantage",
  "comparison",
  "son",
  "signed",
  "unsigned",
  "integers",
  "equal",
  "width",
  "dth",
  "requires",
  "res",
  "arr",
  "designates",
  "work",
  "ork",
  "assumes",
  "requested.[34][35",
  "[35",
  "calls",
  "lls",
  "pass",
  "ass",
  "semantics",
  "ics",
  "reference.the",
  "applying",
  "operator",
  "tor",
  "dereferenced",
  "ced",
  "defined",
  "file.hence",
  "printf()function",
  "xxxx()xxxx",
  "file",
  "stdio.h>.the",
  "xxxx.x>.xxx",
  "sqrt",
  "qrt",
  "calculates",
  "square",
  "oot",
  "well",
  "ell",
  "suited",
  "particular",
  "lar",
  "task",
  "unchecked",
  "made",
  "ade",
  "arbitrary",
  "undesirable",
  "effects",
  "mark[0",
  "k[0",
  "xxxx[d",
  "mark[1",
  "k[1",
  "on.c",
  "n.c",
  "xx.x",
  "declarationfew",
  "few",
  "keynotes",
  "expressions",
  "5;printf",
  "ntf",
  "d;xxxx",
  "%",
  "c);}output6",
  "ut6",
  "x);}xxxxd",
  "11during",
  "ddxxxx",
  "argument",
  "non",
  "prime",
  "returns",
  "rns",
  "thus",
  "hus",
  "x[i",
  "x[x",
  "i+1th",
  "1th",
  "x+dxx",
  "array.furthermore",
  "notable",
  "exception",
  "operand",
  "printf",
  "standard",
  "ard",
  "library",
  "send",
  "formatted",
  "output",
  "put",
  "screen",
  "display",
  "lay",
  "generate",
  "negative.pointersc",
  "rsc",
  "supports",
  "records",
  "rds",
  "object",
  "\n ",
  "escape",
  "ape",
  "sequence",
  "translates",
  "newline",
  "ine",
  "character",
  "signifies",
  "ies",
  "current",
  "line",
  "integer",
  "ger",
  "char",
  "har",
  "single",
  "byte",
  "yte",
  "characters",
  "0){flag",
  "lag",
  "d){xxxx",
  "1;}}if",
  "}if",
  "d;}}xx",
  "flag",
  "a+b;return",
  "x+x;xxxx",
  "result",
  "//",
  "statement}function",
  "xxxx}xxxx",
  "prototypea",
  "pea",
  "prototype",
  "simply",
  "ply",
  "specifies",
  "syntactic",
  "sugar",
  "gar",
  "remove",
  "template",
  "message)the",
  "xxxx)xxx",
  "weakly",
  "kly",
  "typed",
  "ped",
  "makes",
  "kes",
  "similar",
  "algol",
  "gol",
  "descendants",
  "pascal.[29",
  "[29",
  "xxxx.[dd",
  "built",
  "ilt",
  "sizes",
  "zes",
  "both",
  "oth",
  "floating",
  "numbers",
  "enumerated",
  "enum",
  "n);}the",
  "x);}xxx",
  "entered",
  "checkprimeanddisplay",
  "function.here",
  "checks",
  "cks",
  "displays",
  "appropriate",
  "message.example",
  "value#include",
  "xxxx#xxxx",
  "passing",
  "returning",
  "better.a",
  "r.a",
  "perform",
  "orm",
  "however",
  "ver",
  "created",
  "han",
  "true",
  "rue",
  "suffer",
  "issues",
  "pointers.thus",
  "apparent",
  "equivalence",
  "still",
  "distinction",
  "hem",
  "useful",
  "ful",
  "indicating",
  "special",
  "ial",
  "cases",
  "next",
  "ext",
  "final",
  "node",
  "linked",
  "error",
  "ror",
  "indication",
  "hence",
  "returned",
  "function.example",
  "scanf",
  "anf",
  "&",
  "n);for(i=2",
  "i=2",
  "x);xxx(x=d",
  "assigning",
  "explicit",
  "cit",
  "casting",
  "macro",
  "cro",
  "several",
  "math.h",
  "h.h",
  "file.visit",
  "sit",
  "more.user",
  "functionyou",
  "create",
  "per",
  "}",
  "serves",
  "ves",
  "purpose",
  "ose",
  "environment",
  "begin",
  "gin",
  "program",
  "ram",
  "execution",
  "{",
  "checkprimenumber",
  "takes",
  "input",
  "screen.the",
  "empty",
  "pty",
  "parentheses",
  "indicates",
  "function.the",
  "base",
  "incremented",
  "bytes",
  "multiplied",
  "n);return",
  "x);xxxx",
  "0;}//",
  "}//",
  "d;}//",
  "userint",
  "getinteger(){int",
  "xxxx(){xxx",
  "n;printf",
  "x;xxxx",
  "enter",
  "const",
  "maxinput",
  "called",
  "control",
  "rol",
  "transferred",
  "exist",
  "only",
  "nly",
  "declared.let",
  "take",
  "ake",
  "main(void",
  "xxxx(xxxx",
  "due",
  "determine",
  "entire",
  "ire",
  "through",
  "those",
  "malloc",
  "loc",
  "pointprintf",
  "terminates",
  "automaticexternalstaticregisterlocal",
  "variablethe",
  "automatic",
  "a+b);the",
  "x+x);xxx",
  "match.visit",
  "page",
  "body.a",
  "y.a",
  "gives",
  "information",
  "later",
  "program.syntax",
  "prototypereturntype",
  "functionname(type1",
  "pe1",
  "xxxx(xxxxd",
  "argument1",
  "nt1",
  "xxxxd",
  "type2",
  "pe2",
  "argument2",
  "nt2",
  "...",
  "addnumbers(int",
  "xxxx(xxx",
  "provides",
  "following",
  "stored",
  "invoke",
  "oke",
  "..",
  "begins",
  "ins",
  "function.when",
  "encounters",
  "functionname",
  "jumps",
  "mps",
  "tovoid",
  "functionname()and",
  "xxxx()xxx",
  "functionname().the",
  "xxxx().xxx",
  "back",
  "ack",
  "endsif(number",
  "0.0){break;}sum",
  "d.d){xxxx;}xxx",
  "outside",
  "undeclared.let",
  "another",
  "example.int",
  "programming.a",
  "g.a",
  "task.suppose",
  "circle",
  "color",
  "lor",
  "similarly",
  "rly",
  "exists",
  "sts",
  "func",
  "unc",
  "global",
  "bal",
  "known",
  "own",
  "external",
  "many",
  "trees",
  "ees",
  "commonly",
  "implemented",
  "struct",
  "uct",
  "together",
  "i;double",
  "average",
  "sum=0.0;for(i=1",
  "i=1",
  "xxx=d.d;xxx(x=d",
  "i<=maxinput",
  "x<=xxxx",
  "index",
  "dex",
  "resulting",
  "multi",
  "lti",
  "dimensional",
  "thought",
  "increasing",
  "row",
  "major",
  "jor",
  "order.multi",
  "numerical",
  "mainly",
  "applied",
  "linear",
  "ear",
  "algebra",
  "bra",
  "matrices",
  "ces",
  "brace",
  "ace",
  "n1-n2);finally",
  "xd-xd);xxxx",
  "function.calling",
  "functioncontrol",
  "calling",
  "it.syntax",
  "xx.xxxx",
  "goto",
  "oto",
  "encountered",
  "label",
  "bel",
  "code.how",
  "works?example",
  "xxxx?xxxx",
  "statement//",
  "t//",
  "xxxx//",
  "calculate",
  "numbers//",
  "s//",
  "displayed",
  "yed",
  "visit",
  "official",
  "documentation.write",
  "lot",
  "way",
  "writing",
  "nested",
  "loops",
  "ops",
  "arguments.[b]the",
  "xxxx.[x]xxx",
  "opening",
  "curly",
  "beginning",
  "diverts",
  "named",
  "supplied",
  "names",
  "unique.this",
  "just",
  "overview",
  "iew",
  "specifier",
  "ier",
  "invoker",
  "ker",
  "evaluating",
  "variableflag",
  "syntax",
  "break;the",
  "xxxx;xxx",
  "almost",
  "else",
  "loop.how",
  "works?working",
  "statementexample",
  "maximum",
  "mum",
  "callfunctionname(argument1",
  "addnumbers(n1",
  "(n1",
  "xxxx(xd",
  "function.function",
  "definitionfunction",
  "contains",
  "careful",
  "test",
  "succeeded",
  "intervalscheck",
  "eck",
  "armstrong",
  "ong",
  "making",
  "functionscheck",
  "expressed",
  "numbersfind",
  "natural",
  "recursioncalculate",
  "factorial",
  "recursionfind",
  "g.c.d",
  "c.d",
  "x.x.x",
  "recursionreverse",
  "rse",
  "sentence",
  "power",
  "wer",
  "recursionconvert",
  "ert",
  "binary",
  "decimal",
  "mal",
  "vice",
  "ice",
  "versaconvert",
  "octal",
  "tal",
  "versa",
  "rsa",
  "programming?the",
  "xxxx?xxx",
  "recursion",
  "continues",
  "until",
  "condition",
  "met",
  "prevent",
  "it.to",
  ".to",
  "xx.xx",
  "infinite",
  "approach",
  "ach",
  "one",
  "branch",
  "nch",
  "recursive",
  "doesn",
  "esn",
  "t.example",
  "x.xxxx",
  "recursion#include",
  "technique",
  "que",
  "recursion.how",
  "works?void",
  "recurse",
  "want",
  "100",
  "ddd",
  "it.int",
  "xx.xxx",
  "data[100];how",
  "xxxx[ddd];xxx",
  "array?datatype",
  "arrayname[arraysize];for",
  "xxxx[xxxx];xxx",
  "float",
  "oat",
  "mark[5];here",
  "xxxx[d];xxxx",
  "ark",
  "nor",
  "allowed",
  "wed",
  "easily",
  "ily",
  "causes",
  "replace",
  "text",
  "declarations",
  "interpreted",
  "exit",
  "xit",
  "successful",
  "execution.[28]data",
  "xxxx.[dd]xxxx",
  "typesmain",
  "declarationsthis",
  "section",
  "needs",
  "eds",
  "additional",
  "citations",
  "verification",
  "merely",
  "ely",
  "subroutine",
  "sized",
  "indexing",
  "statement.how",
  "programmingexample",
  "skipped",
  "main()}void",
  "xxxx()}xxxx",
  "func()}in",
  "}in",
  "xxxx()}xx",
  "func().this",
  "xxxx().xxxx",
  "inttwo",
  "functionthe",
  "needed",
  "before",
  "constant2",
  "statements",
  "after",
  "encountered.if",
  ".if",
  "match",
  "matching",
  "clause",
  "optional",
  "flowchartflowchart",
  "art",
  "simple",
  "calculator//",
  "r//",
  "calculator",
  "1)printf",
  "d)xxxx",
  "book",
  "ook",
  "language.the",
  "preprocessing",
  "directive",
  "indicated",
  "n;}the",
  "x;}xxx",
  "getinteger",
  "pages",
  "programmingtypes",
  "functionsadvantages",
  "easier",
  "understand",
  "maintain",
  "debug.reusable",
  "programsa",
  "msa",
  "large",
  "rge",
  "divided",
  "smaller",
  "modules",
  "silently",
  "discarded",
  "workaround",
  "und",
  "allocate",
  "vector",
  "columns.)c99",
  "c99",
  "xxxx.)xdd",
  "introduced",
  "length",
  "gth",
  "ordinary",
  "arrays.arraypointer",
  "interchangeabilitythe",
  "solve",
  "lve",
  "problem",
  "lem",
  "extern",
  "ern",
  "file2",
  "le2",
  "file.register",
  "register",
  "adding",
  "definitionreturntype",
  "exhibit",
  "bit",
  "ambiguity",
  "ity",
  "dereferencing",
  "undefined",
  "segmentation",
  "fault",
  "implicitly",
  "type.[28]careless",
  "potentially",
  "dangerous",
  "much",
  "read",
  "write.syntax",
  "caseswitch",
  "expression)?{case",
  "xxxx)?{xxxx",
  "check",
  "not.the",
  "xxx.xxx",
  "below",
  "derived",
  "ved",
  "unions",
  "string",
  "literal",
  "unnamed",
  "set",
  "up",
  "0-valued",
  "ued",
  "d-xxxx",
  "6initially",
  "dxxxx",
  "argument.suppose",
  "initially",
  "files.the",
  "representation",
  "raw",
  "perhaps",
  "aps",
  "augmented",
  "offset",
  "within",
  "word",
  "field",
  "eld",
  "includes",
  "thing",
  "statement.in",
  "mark[2",
  "k[2",
  "2128d",
  "28d",
  "ddddx",
  "on.this",
  "bytes.how",
  "array?it",
  "?it",
  "xxxx?xx",
  "programmingin",
  "tutorial",
  "different",
  "approaches",
  "hes",
  "functions.these",
  "implies",
  "never",
  "copied",
  "whole",
  "ole",
  "taken",
  "ken",
  "each",
  "main(){checkprimenumber",
  "xxxx(){xxxx",
  "performance",
  "vital",
  "instead",
  "usually",
  "slower.that",
  "said",
  "aid",
  "important",
  "concept",
  "ept",
  "properly",
  "safe",
  "afe",
  "places",
  "unsafe",
  "invalid",
  "deallocation",
  "dangling",
  "wild",
  "ild",
  "directly",
  "cast",
  "ast",
  "union",
  "corrupt",
  "upt",
  "allows",
  "ows",
  "bad",
  "stuff",
  "jump",
  "ump",
  "scope.that",
  "formal",
  "otherwise",
  "ise",
  "throw",
  "error.if",
  "meaning",
  "hold",
  "values.it",
  ".it",
  "note",
  "ote",
  "declared.access",
  "elementsyou",
  "indices.suppose",
  "scope",
  "ope",
  "lifetime",
  "executed.if",
  "executed.by",
  ".by",
  "optional.switch",
  "calculator#include",
  "operator;double",
  "xxxx;xxxx",
  "fails",
  "ils",
  "part",
  "ultimately",
  "function.calculation",
  "recursionadvantages",
  "disadvantages",
  "recursionrecursion",
  "elegant",
  "tree",
  "ree",
  "traversal",
  "sal",
  "according",
  "specification",
  "newer",
  "pon",
  "reaching",
  "iteration",
  "treat",
  "eat",
  "recursionin",
  "write",
  "example.a",
  "e.a",
  "contents",
  "memcpy",
  "cpy",
  "accessing",
  "individual",
  "32.512.432.5",
  "2.5",
  "dd.ddd.ddd.d",
  "12.4",
  "2.4",
  "dd.d",
  "20.1the",
  "dd.dxxx",
  "attempts",
  "ensure",
  "correctness",
  "programmer",
  "mer",
  "override",
  "ways",
  "either",
  "convert",
  "reinterpret",
  "ret",
  "bits",
  "way.some",
  "xxx.xxxx",
  "unintuitive",
  "particularly",
  "higher",
  "order",
  "qsort",
  "ort",
  "bsearch",
  "callbacks",
  "invoked",
  "event",
  "statement;the",
  "identifier",
  "hello",
  "llo",
  "world",
  "rld",
  "variables.however",
  "modern",
  "very",
  "ery",
  "good",
  "ood",
  "optimization",
  "rare",
  "chance",
  "make",
  "faster.unless",
  "working",
  "embedded",
  "know",
  "optimize",
  "given",
  "application",
  "variables.static",
  "variablea",
  "lea",
  "manually.c",
  "y.c",
  "provision",
  "declaring",
  "relies",
  "effectively",
  "accomplishes",
  "continue;the",
  "class",
  "determines",
  "nes",
  "visibility",
  "variable.there",
  "programming?c",
  "g?c",
  "xxxx?x",
  "helps",
  "lps",
  "internal",
  "architecture",
  "computer",
  "stores",
  "retrieves",
  "information.after",
  "learning",
  "java",
  "ava",
  "etc.opportunity",
  "addnumbers()return",
  "not.if",
  "xxx.xx",
  "latter",
  "applies",
  "subscripts",
  "a[20",
  "[20",
  "x[dd",
  "element.if",
  "last",
  "n-1",
  "x-d",
  "type.a",
  "argument.return",
  "statementthe",
  "design",
  "constructs",
  "map",
  "efficiently",
  "typical",
  "machine",
  "instructions",
  "found",
  "lasting",
  "applications",
  "previously",
  "coded",
  "assembly",
  "bly",
  "language",
  "operands",
  "32.5",
  "respectively.since",
  "example.the",
  "execute",
  "ute",
  "among",
  "alternatives.you",
  "purposes",
  "strings",
  "ngs",
  "executed.how",
  "works",
  "rks",
  "programming?note",
  "easy",
  "asy",
  "reuse.types",
  "functionthere",
  "functionsuser",
  "functionsstandard",
  "functionsthe",
  "programming.these",
  "files",
  "it.the",
  "transfer",
  "label.syntax",
  "statementgoto",
  "7suppose",
  "file1",
  "le1",
  "semicolon",
  "lon",
  "variables.every",
  "properties",
  "class.type",
  "refers",
  "functioncreate",
  "functiondividing",
  "complex",
  "lex",
  "chunks",
  "nks",
  "work?the",
  "evaluated",
  "compared",
  "label.if",
  "corresponding",
  "example;static",
  "i;the",
  "x;xxx",
  "persists",
  "topics",
  "functiontypes",
  "functionsscope",
  "variablerecursionc",
  "onc",
  "examplesdisplay",
  "try",
  "complain",
  "variable.depending",
  "message"
]